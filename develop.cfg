[buildout]
parts += 
    instance
    plonesite
    omelette
    zopepy
    ipzope-install
    ipzope-script
    zopeskel
    test

extends = 
    buildout.cfg


[instance]
verbose-security = on
debug-mode = on

eggs +=
    Products.DocFinderTab
    sauna.reload
    Products.Clouseau
    Products.Gloworm
    zope2.zodbbrowser
#    misitio.policy

zcml = 
    Products.Gloworm
    zope2.zodbbrowser

zope-conf-additional = %import sauna.reload


[plonesite]
recipe = collective.recipe.plonesite
site-id = plone
instance = instance
#profiles = misitio.policy:default


# symlinks all Python source code to parts/omelette folder when 
# buildout is run windows users will need to install additional 
# software for this part to build correctly.
# For options see http://pypi.python.org/pypi/collective.recipe.omelette
[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}
#products = ${instance:products}
#packages = ${zope2:location}/lib/python ./


# zopepy commands allows you to execute Python scripts using a PYTHONPATH 
# including all the configured eggs
# For options see http://pypi.python.org/pypi/zc.recipe.egg
[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

# create ZopeSkel and paster commands with dexterity support
# For options see http://pypi.python.org/pypi/zc.recipe.egg
[zopeskel]
recipe = zc.recipe.egg
eggs =
    ZopeSkel
    Paste
    PasteDeploy
    PasteScript
    zopeskel.dexterity


# Download and put https://svn.plone.org/svn/collective/dotipython/trunk/ipy_profile_zope.py
# into your $HOME/.ipython directory.
# For options see http://pypi.python.org/pypi/plone.recipe.command
[ipzope-install]
recipe = plone.recipe.command
command = 
    mkdir $HOME/.ipython
    curl https://svn.plone.org/svn/collective/dotipython/trunk/ipy_profile_zope.py > ~/.ipython/ipy_profile_zopePlone.py
#    wget -nc https://svn.plone.org/svn/collective/dotipython/trunk/ipy_profile_zope.py
#    cp ${buildout:directory}/ipy_profile_zope.py $HOME/.ipython
stop-on-error = yes
update-command = ${ipzope-install:command} 


# a IPython Shell for interactive use with zope running.
# For options see http://pypi.python.org/pypi/zc.recipe.egg
[ipzope-script]
recipe = zc.recipe.egg
eggs =
    ipython
    ${instance:eggs}
initialization =
    import sys, os
    os.environ["INSTANCE_HOME"] = "${instance:location}"
    sys.argv[1:1] = "--profile=zope".split()
scripts = ipython=ipzope


# create testrunner commands with dexterity support
# For options see http://pypi.python.org/pypi/zc.recipe.testrunner
[test]
recipe = zc.recipe.testrunner
eggs =
    Pillow
#    misitio.policy [test]
defaults = ['--auto-color', '--auto-progress']


[versions]
#ZopeSkel=3.0b3
ZopeSkel = 2.21.2
Cheetah = 2.2.1
Pillow = 1.7.7
Products.DocFinderTab = 1.0.5
PyYAML = 3.10
Pygments = 1.5
argh = 0.15.1
collective.recipe.plonesite = 1.5
ipython = 0.12
plone.recipe.command = 1.1
sauna.reload = 0.4.3
watchdog = 0.6.0
zope2.zodbbrowser = 0.2

#Required by:
#watchdog 0.6.0
pathtools = 0.1.2

plone.app.customerize = 1.2.2
archetypes.kss = 1.7.2

[sources]
Products.Clouseau = svn http://svn.plone.org/svn/collective/Products.Clouseau/trunk/
Products.Gloworm = git https://github.com/esteele/Products.Gloworm.git
zopeskel.dexterity = git https://github.com/collective/zopeskel.dexterity.git
#misitio.policy = fs misitio.policy
